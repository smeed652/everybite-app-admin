---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI

on:
  push:
    branches:
      - "main"
      - "production"
  pull_request:
    branches:
      - "main"
      - "production"

env:
  NODE_VERSION: 20
  VERCEL_CLI_VERSION: latest

jobs:
  # Fast feedback jobs that run on all branches
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Unit tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  storybook-tests:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Storybook a11y tests
        run: npm run test-stories

    # Smoke E2E tests for main branch
  smoke-e2e:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [lint-and-test, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: Install Vercel CLI
        run: npm i -g vercel@${{ env.VERCEL_CLI_VERSION }}

      - name: Cypress tests
        uses: cypress-io/github-action@v6
        with:
          start: >-
            npx vercel@${{ env.VERCEL_CLI_VERSION }} dev --listen 3000 --yes
            --token ${{ secrets.VERCEL_TOKEN }}
          spec: cypress/e2e/smoke.cy.ts
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          browser: chrome
          record: false
        env:
          VITE_AWS_REGION: ${{ secrets.VITE_AWS_REGION }}
          VITE_COGNITO_USER_POOL_ID: ${{ secrets.VITE_COGNITO_USER_POOL_ID }}
          VITE_COGNITO_APP_CLIENT_ID: ${{ secrets.VITE_COGNITO_APP_CLIENT_ID }}
          VITE_METABASE_API_URL: ${{ secrets.VITE_METABASE_API_URL }}
          VITE_GRAPHQL_URI: ${{ secrets.VITE_GRAPHQL_URI }}
          VITE_API_KEY: ${{ secrets.VITE_API_KEY }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          CYPRESS_BASE_URL: http://localhost:3000
          CYPRESS_USERNAME: ${{ secrets.CYPRESS_USERNAME }}
          CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}

      - name: Upload Cypress screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots-${{ github.ref_name }}
          path: cypress/screenshots
          retention-days: 7

      - name: Upload Cypress videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos-${{ github.ref_name }}
          path: cypress/videos
          retention-days: 7

  # Additional comprehensive E2E tests only for production
  full-e2e:
    if: github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest
    needs: [lint-and-test, build, smoke-e2e]
    strategy:
      matrix:
        # Run all E2E tests in parallel for faster execution
        spec:
          - "cypress/e2e/404.cy.ts"
          - "cypress/e2e/dashboard.cy.ts"
          - "cypress/e2e/logout.cy.ts"
          - "cypress/e2e/network-failure.cy.ts"
          - "cypress/e2e/rbac_api.cy.ts"
          - "cypress/e2e/rbac_ui.cy.ts"
          - "cypress/e2e/smartmenus.cy.ts"
          - "cypress/e2e/smoke_nonadmin_403.cy.ts"
          - "cypress/e2e/smoke_smartmenu.cy.ts"
          - "cypress/e2e/token-expiry.cy.ts"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: Install Vercel CLI
        run: npm i -g vercel@${{ env.VERCEL_CLI_VERSION }}

      - name: Cypress test - ${{ matrix.spec }}
        uses: cypress-io/github-action@v6
        with:
          start: >-
            npx vercel@${{ env.VERCEL_CLI_VERSION }} dev --listen 3000 --yes
            --token ${{ secrets.VERCEL_TOKEN }}
          spec: ${{ matrix.spec }}
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          browser: chrome
          record: false
        env:
          VITE_AWS_REGION: ${{ secrets.VITE_AWS_REGION }}
          VITE_COGNITO_USER_POOL_ID: ${{ secrets.VITE_COGNITO_USER_POOL_ID }}
          VITE_COGNITO_APP_CLIENT_ID: ${{ secrets.VITE_COGNITO_APP_CLIENT_ID }}
          VITE_METABASE_API_URL: ${{ secrets.VITE_METABASE_API_URL }}
          VITE_GRAPHQL_URI: ${{ secrets.VITE_GRAPHQL_URI }}
          VITE_API_KEY: ${{ secrets.VITE_API_KEY }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          CYPRESS_BASE_URL: http://localhost:3000
          CYPRESS_USERNAME: ${{ secrets.CYPRESS_USERNAME }}
          CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}

      - name: Upload Cypress screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots-production-${{ matrix.spec }}
          path: cypress/screenshots
          retention-days: 7

      - name: Upload Cypress videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos-production-${{ matrix.spec }}
          path: cypress/videos
          retention-days: 7

  # Summary job that runs after all tests complete
  ci-summary:
    runs-on: ubuntu-latest
    needs: [lint-and-test, build, storybook-tests, smoke-e2e]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: CI Summary
        run: |
          echo "## 🚀 CI Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.lint-and-test.result }}" == "success" ]; then
            echo "✅ **Lint & Unit Tests:** PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Lint & Unit Tests:** FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.build.result }}" == "success" ]; then
            echo "✅ **Build:** PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Build:** FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.storybook-tests.result }}" == "success" ]; then
            echo "✅ **Storybook Tests:** PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Storybook Tests:** FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.smoke-e2e.result }}" == "success" ]; then
            echo "✅ **E2E Tests:** PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **E2E Tests:** FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Test Strategy:**" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.ref }}" == "refs/heads/production" ]; then
            echo "- Full E2E test suite executed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Smoke E2E tests executed" >> $GITHUB_STEP_SUMMARY
          fi
